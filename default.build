<?xml version="1.0"?>
<project name="CSExtensionKit Build Script" default="build" basedir=".">
  <description>Default CSExtensionKit Automated Build script</description>
  <property name="os" value="${operating-system::get-platform(environment::get-operating-system())}" />
  <property name="mdtooldir" value="/Applications/Xamarin\ Studio.app/Contents/MacOS"/>
  <!--property name="psmtooldir" value="C:\Program Files (x86)\SCE\PSM\tools\PsmStudio\bin" /-->

  <target name="checkos" description="check the operating system">
    <property name="os" value="${operating-system::get-platform(environment::get-operating-system())}"/>
    <if test="${os == 'Unix'}">
      <if test="${directory::exists('/Applications') and directory::exists('/Library')}">
        <property name="os" value="MacOS"/>
        <if test="${not directory::exists(mdtooldir)}">
          <property name="mdtooldir" value="${path::get-full-path('/Applications/Xamarin Studio.app/Contents/MacOS')}"/>
        </if>
      </if>
    </if>
    <echo message="Detected : ${os}"/>
  </target>

  <target name="clean" depends="checkos">
    <delete dir="${project::get-base-directory()}\win32\obj" verbose="true">
    </delete>
  </target>

  <target name="build" description="Build CSExtensionKit Release">

    <!--call target="buildPCL"/-->
    <call target="buildwindows"/>
    <!--call target="buildwindowsphone8"/-->
    <!--call target="buildwindows8"/-->
    <!--call target="buildios"/-->
    <call target="buildmac"/>
    <!--call target="buildandroid"/-->
    <!--call target="buildouya"/-->

    <call target="buildnugets"/>

  </target>

  <target name="buildPCL" description="Build CSExtensionKit Portable project" depends="clean">
    <if test="${os == 'Win32NT'}">
      <exec program="msbuild " commandline=".\PCL\CSExtensionKit.PCL.sln /t:Clean /p:Configuration=Release" />
      <exec program="msbuild " commandline=".\PCL\CSExtensionKit.PCL.sln /t:Build /p:Configuration=Release" />
    </if>
    <if test="${os == 'MacOS'}">
      <exec program="xbuild" commandline="/t:Clean /p:Configuration=Release ./PCL/CSExtensionKit.PCL.sln" />
      <exec program="xbuild" commandline="/t:Build /p:Configuration=Release ./PCL/CSExtensionKit.PCL.sln" />
    </if>
  </target>

  <target name="buildwindows" description="Build Windows" depends="clean">
    <if test="${os == 'Win32NT'}">
      <exec program="msbuild " commandline="src\CSExtensionKit\CSExtensionKit.sln /t:Clean /p:Configuration=Release" />
      <exec program="msbuild " commandline="src\CSExtensionKit\CSExtensionKit.sln /t:Build /p:Configuration=Release" />
   
    </if>
    <if test="${os == 'Unix'}">
      <exec program="xbuild" commandline="/t:Clean /p:Configuration=Release CSExtensionKit.sln" />
      <exec program="xbuild" commandline="/t:Build /p:Configuration=Release CSExtensionKit.sln" />

    </if>
  </target>

  <target name="buildwindowsphone8" description="Build Windows Phone 8" depends="clean">
    <if test="${os == 'Win32NT'}">
      <if test="${file::exists('c:\Program Files (x86)\MSBuild\Microsoft\WindowsPhone\v8.0\Microsoft.Cpp.WindowsPhone.8.0.targets') or file::exists('c:\Program Files\MSBuild\Microsoft\WindowsPhone\v8.0\Microsoft.Cpp.WindowsPhone.8.0.targets')}">
        <exec program="msbuild " commandline='src\CSExtensionKit\CSExtensionKit.WP8.sln /t:Clean /p:Configuration=Release /p:Platform="ARM"' />
        <exec program="msbuild " commandline='src\CSExtensionKit\CSExtensionKit.WP8.sln /t:Build /p:Configuration=Release /p:Platform="ARM"' />
        <exec program="msbuild " commandline='src\CSExtensionKit\CSExtensionKit.WP8.sln /t:Clean /p:Configuration=Release /p:Platform="x86"' />
        <exec program="msbuild " commandline='src\CSExtensionKit\CSExtensionKit.WP8.sln /t:Build /p:Configuration=Release /p:Platform="x86"' />
      </if>
    </if>
  </target>

  <target name="buildwindows8" description="Build Windows 8" depends="clean">
    <if test="${os == 'Win32NT'}">
      <exec program="msbuild " commandline="src\CSExtensionKit\CSExtensionKit.Win8.sln /t:Clean /p:Configuration=Release" />
      <exec program="msbuild " commandline="src\CSExtensionKit\CSExtensionKit.Win8.sln /t:Build /p:Configuration=Release" />
    </if>
  </target>

  <target name="buildios" description="Build iOS" depends="clean">
    <if test="${os == 'Win32NT'}">
      <if test="${file::exists('C:\Program Files (x86)\MSBuild\Xamarin\iOS\Xamarin.MonoTouch.CSharp.targets')}">
        <exec program="msbuild " commandline="CSExtensionKit.iOS.sln /t:Clean /p:Configuration=Release" />
        <exec program="msbuild " commandline="CSExtensionKit.iOS.sln /t:Build /p:Configuration=Release" />
      </if>
    </if>
    <if test="${os == 'MacOS'}">
      <!--if test="${file::exists('/Developer/MonoTouch/MSBuild/Xamarin.ObjcBinding.CSharp.targets')}"-->
        <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Clean -c:Release|iPhone  CSExtensionKit.iOS.sln" />
        <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Build -c:Release|iPhone  CSExtensionKit.iOS.sln" />
      <!--/if-->
    </if>
  </target>

  <target name="buildandroid" description="Build Android" depends="clean">
    <if test="${os == 'Win32NT'}">
      <if test="${file::exists('C:\Program Files (x86)\MSBuild\Xamarin\Android\Xamarin.Android.CSharp.targets')}">
        <exec program="msbuild " commandline="CSExtensionKit.Android.sln /t:Clean /p:Configuration=Release" />
        <exec program="msbuild " commandline="CSExtensionKit.Android.sln /t:Build /p:Configuration=Release" />
      </if>
    </if>
    <if test="${os == 'MacOS'}">
      <if test="${file::exists('/Developer/MonoAndroid/bin/mandroid')}">
        <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Clean -c:Release CSExtensionKit.Android.sln" />
        <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Build -c:Release CSExtensionKit.Android.sln" />
      </if>
    </if>
  </target>

  <target name="buildouya" description="Build Android" depends="clean">
    <if test="${os == 'Win32NT'}">
      <if test="${file::exists('C:\Program Files (x86)\MSBuild\Xamarin\Android\Xamarin.Android.CSharp.targets')}">
          <exec program="msbuild " commandline="CSExtensionKit.Ouya.sln /t:Clean /p:Configuration=Release" />
          <exec program="msbuild " commandline="CSExtensionKit.Ouya.sln /t:Build /p:Configuration=Release" />
      </if>
    </if>
    <if test="${os == 'MacOS'}">
      <if test="${file::exists('/Developer/MonoAndroid/bin/mandroid')}">
        <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Clean -c:Release CSExtensionKit.ouya.sln" />
        <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Build -c:Release CSExtensionKit.ouya.sln" />
      </if>
    </if>
  </target>

  <target name="buildmac" description="Build Mac OSX" depends="clean">
    <if test="${os == 'MacOS'}">
        <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Clean -c:Release CSExtensionKit.Mac.sln" />
        <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Build -c:Release CSExtensionKit.Mac.sln" />
    </if>
  </target>

  <target name="buildnugets" description="Build NuGet Packages" depends="checkos">
    <if test="${os == 'Win32NT'}">
      <property name="nuget.cmd.dir.path" value='Tools/NuGet/NuGet.exe' overwrite="true" /> 	
      <property name="nuspec.file.dir.path" value="${project::get-base-directory()}\NuGet\" overwrite="true" />
      <property name="packages.dir.path" value="${nuspec.file.dir.path}bin" overwrite="true" />
      
                <echo message="" />
                <echo message="" />
                <echo message="NuGet Command directory: ${nuget.cmd.dir.path}" />
                <echo message="Base directory: ${nuspec.file.dir.path}" />
                <echo message="Output directory: ${packages.dir.path}" />
                <echo message="" />

      <mkdir dir="${packages.dir.path}" />
	  <exec program="${nuget.cmd.dir.path} " commandline='pack "${nuspec.file.dir.path}CSExtensionKit.Windows.nuspec" -OutputDirectory "${packages.dir.path}"' />
<!--
      <exec program="${nuget.cmd.dir.path} " commandline='pack "${nuspec.file.dir.path}CSExtensionKit.PCL.nuspec" -OutputDirectory "${packages.dir.path}"' />
      <exec program="${nuget.cmd.dir.path} " commandline='pack "${nuspec.file.dir.path}CSExtensionKit.PCL.DX.nuspec" -OutputDirectory "${packages.dir.path}"' />
      <exec program="${nuget.cmd.dir.path} " commandline='pack "${nuspec.file.dir.path}CSExtensionKit.PCL.GL.nuspec" -OutputDirectory "${packages.dir.path}"' />
      <exec program="${nuget.cmd.dir.path} " commandline='pack "${nuspec.file.dir.path}CSExtensionKit.PCL.XNA.nuspec" -OutputDirectory "${packages.dir.path}"' />

      <exec program="${nuget.cmd.dir.path} " commandline='pack "${nuspec.file.dir.path}CSExtensionKit.WindowsDX.nuspec" -OutputDirectory "${packages.dir.path}"' />
      <exec program="${nuget.cmd.dir.path} " commandline='pack "${nuspec.file.dir.path}CSExtensionKit.WindowsGL.nuspec" -OutputDirectory "${packages.dir.path}"' />
      <exec program="${nuget.cmd.dir.path} " commandline='pack "${nuspec.file.dir.path}CSExtensionKit.Windows8.nuspec" -OutputDirectory "${packages.dir.path}"' />
      <exec program="${nuget.cmd.dir.path} " commandline='pack "${nuspec.file.dir.path}CSExtensionKit.WindowsPhone8.nuspec" -OutputDirectory "${packages.dir.path}"' />
      <exec program="${nuget.cmd.dir.path} " commandline='pack "${nuspec.file.dir.path}CSExtensionKit.iOS.nuspec" -OutputDirectory "${packages.dir.path}"' />
      <exec program="${nuget.cmd.dir.path} " commandline='pack "${nuspec.file.dir.path}CSExtensionKit.Android.nuspec" -OutputDirectory "${packages.dir.path}"' />
      <exec program="${nuget.cmd.dir.path} " commandline='pack "${nuspec.file.dir.path}CSExtensionKit.Ouya.nuspec" -OutputDirectory "${packages.dir.path}"' />
	  -->
      <!--exec program="${nuget.cmd.dir.path} " commandline='pack "${nuspec.file.dir.path}Cocos2D.MGCB.nuspec" -OutputDirectory "${packages.dir.path}"' /-->
      
    </if>
    <if test="${os == 'MacOS'}">

     <property name="nuget.cmd.dir.path" value="./tools/NuGet/NuGet.exe" overwrite="true" /> 	
      <property name="nuspec.file.dir.path" value="${project::get-base-directory()}/NuGet/" overwrite="true" />
      <property name="packages.dir.path" value="${nuspec.file.dir.path}bin" overwrite="true" />
      <property name="monodir" value="/usr/bin"/>

                <echo message="" />
                <echo message="" />
                <echo message="NuGet Command directory: ${nuget.cmd.dir.path}" />
                <echo message="Base directory: ${nuspec.file.dir.path}" />
                <echo message="Output directory: ${packages.dir.path}" />
                <echo message="" />

      <mkdir dir="${packages.dir.path}" />

      <exec program="mono" basedir="${monodir}" commandline=' "${nuget.cmd.dir.path}" pack "${nuspec.file.dir.path}CSExtensionKit.Mac.nuspec" -OutputDirectory "${packages.dir.path}" -BasePath ./' />
      <exec program="mono" basedir="${monodir}" commandline=' "${nuget.cmd.dir.path}" pack "${nuspec.file.dir.path}CSExtensionKit.MacOS.nuspec" -OutputDirectory "${packages.dir.path}" -BasePath ./' />
      <exec program="mono" basedir="${monodir}" commandline=' "${nuget.cmd.dir.path}" pack "${nuspec.file.dir.path}CSExtensionKit.iOS.Mac.nuspec" -OutputDirectory "${packages.dir.path}" -BasePath ./' />
      <exec program="mono" basedir="${monodir}" commandline=' "${nuget.cmd.dir.path}" pack "${nuspec.file.dir.path}CSExtensionKit.Android.Mac.nuspec" -OutputDirectory "${packages.dir.path}" -BasePath ./' />
      <exec program="mono" basedir="${monodir}" commandline=' "${nuget.cmd.dir.path}" pack "${nuspec.file.dir.path}CSExtensionKit.Ouya.Mac.nuspec" -OutputDirectory "${packages.dir.path}" -BasePath ./' />
 
    </if>
  </target>

  <target name="buildtemplates" description="Build CSExtensionKit templates" depends="checkos">

    <if test="${os == 'Win32NT'}">
       <!--nant buildfile="ProjectTemplates/Templates/ContentBuilder/default.build" target="build" /-->
       <nant buildfile="ProjectTemplates/Templates/StarterTemplates/default.build" target="build" />
    </if>
  </target>

</project>
